from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException

选择浏览器：browser = webdriver.Firefox()
打开url:browser.get("http://www.baidu.com/")
————添加选项
options = webdriver.ChromeOptions()
options.add_argument('--headless')
browser = webdriver.Chrome(chrome_options=option)
————添加参数
启动就最大化：--start-maximized

指定用户文件夹 User Data 路径，可以把书签这样的用户数据保存在系统分区以外的分区–-user-data-dir=”[PATH]”

指定缓存Cache路径：–-disk-cache-dir=”[PATH]“

指定Cache大小，单位Byte–-disk-cache-size=100

隐身模式启动：–-incognito

禁用JavaScript：--disable-javascript

禁用弹出拦截：--disable-popup-blocking

禁用插件：--disable-plugins

禁用图像：--disable-images

设置代理：chrome_options.add_argument('--proxy-server=http://{ip}:{port}')

等待：
browser.implicitly_wait(30)
browser.set_page_load_timeout(30)
browser.set_script_timeout(30)

关闭浏览器： browser.quit()/browser.close()

前进/后退： browser.forward()/browser.back()

浏览器最大化：browser.maximize_window()

浏览器宽高设置(宽480，高800)：browser.set_window_size(480, 800)

刷新： browser.refresh()

返回当前页面标题：browser.title

返回当前页面url：browser.current_url

返回当前浏览器的所有窗口：browser.window_handles

返回当前浏览器的窗口句柄：browser.current_window_handle

选择窗口： browser.switch_to_window(“window_name”)

----------定位元素---------
Id定位：  browser.find_element_by_id(“id_name”)

Name定位： browser.find_element_by_name(“name”)

Css定位：  browser.find_element_by_css_selector(“#kw”)

Xpath定位：browser.find_element_by_xpath(“////input[@id='kw']”)

Link定位： browser.find_element_by_link_text(u”链接”)

Tag定位：  browser.find_element_by_tag_name(“foo”)

截取当前页面： browser.get_screenshot_as_file('/Screenshots/foo.png')

》》在测试使用Selenium webdriver测试WEB系统的时候，用到了模拟鼠标、键盘的一些输入操作。
1、鼠标的左键点击、双击、拖拽、右键点击等；
2、键盘的回车、回退、空格、ctrl、alt、shift等；
》》在webdriver中，有专门的一个类，是用来进行鼠标、键盘的模拟操作的，那就是Actions类，该类使用时，又会涉及到
Keyboard、Mouse、CompositeAction（复合动作）:
1、鼠标左键点击：
Actions action = new Actions(driver);
action.click(driver.findElement(By.by);

左键点击是普通常用的方法，前面已经介绍过一种更简单的方法：
Driver driver=new Driver();
driver.findElement(By.xpath(xpath)).click();

2、鼠标左键双击：
Actions action = new Actions(driver);
action.doubleClick(driver.findElement(By.xpath(xpath)));

3、鼠标左键按下操作：
Actions action = new Actions(driver);
action.clickAndHold(driver.findElemen(By.xpath(xpath)));

4、鼠标左键移动到元素操作：
Actions action = new Actions(driver);
action.moveToElement(driver.findElement(By.xpath(xpath)));

5、鼠标右键点击操作：
Actions action = new Actions(driver) ;
action.contextClick(driver.findElement(By.xpath(xpath)));

6、组合的鼠标操作（将目标元素拖拽到指定的元素上）：
Actions action = new Actions(driver);
action.dragAndDrop(driver.findElement(By.xpath(xpath)),driver.findElement(By.xpath(xpath)));

7、拖拽选择操作，鼠标按住不放，进行拖拽选择，然后释放鼠标，需要三个动作：
Actions action = new Actions(driver);
action.dragAndDrop(driver.findElement(By.xpath(xpath)),xOffset,yOffset);
或
action.clickAndHold(driver.findElement(By.id("1"))).moveToElement(driver.findElement(By.id("3"))).perform();
action.release();

————代码演示：
driver.get("http://www.baidu.com");
driver.findElement(By.name("wd")).sendKeys("林丹");

》》键盘的模拟操作，包括普通按键，比如enter、backspace、tab等，
还包括四个修饰键（Modifier Keys），分别是Caps Lock，Control，Option，Command。
》》普通按键使用时，直接使用sendkeys(theKeys)就可以，如按下enter键：action.sendKeys(Keys.ENTER).perform();
》》修饰键一般使用时，是和别的按键配合使用的，比如快捷键ctrl+F4，这时就得使用keyDown(theKeys)、keyUp(theKeys)来操作
代码如下：
    driver.get("http://www.baidu.com");
    driver.findElement(by.name("wd")).sendKeys("林丹");
    Actions action=new Actions(driver);
    action.sendKeys(Keys.ENTER).perform();  //输入框中输入内容，然后点击回车进行百度
    //使用快捷键alt+f4关闭窗口（但是该方法不稳定，时行时不行，不行居多）
    action.keyDown(keys.ATL).keyDown(keys.F4).keyUp(keys.ALT).perform()
    driver.findElement(By.id("kw")).click();    //使用ctrl+a全选
    action.sendKeys(Keys.CONTROL+"a").perform();

driver = webdriver.Chrome()
driver.get(url)
获取源码：driver.page_source
获取按钮并点击
button = driver.find_element_by_xpath("//*[@id='html-reader-go-more']/div[2]/div[1]/span")
button.click()
driver.execute_script("arguments[0].click();", button)
# 输入页面数并点击
driver.find_element_by_class_name("page-input").clear()
driver.find_element_by_class_name("page-input").send_keys('2')
driver.find_element_by_class_name("page-input").send_keys(Keys.ENTER)