》》》ZipFile.getinfo(name)    获取zip文档内指定文件的信息。返回一个zipfile.ZipInfo对象，它包括文件的详细信息。

》》》ZipFile.infolist()   获取zip文档内所有文件的信息，返回一个zipfile.ZipInfo的列表。

》》》ZipFile.namelist()   获取zip文档内所有文件的名称列表。

》》》ZipFile.extract(member[, path[, pwd]])   将zip文档内的指定文件解压到当前目录。
member 指定要解压的文件名称或对应的 ZipInfo 对象；path 指定了解析文件保存的文件夹； pwd 为解压密码。

import zipfile, os
f = zipfile.ZipFile(os.path.join(os.getcwd(), 'duoduo.zip'))   # 拼接成一个路径
for file in f.namelist():
　　f.extract(file, r'd:/Work')  # 在d:/Work中解压文件
f.close()

》》》ZipFile.printdir()       将zip文档内的信息打印到控制台上。

》》》ZipFile.setpassword(pwd)     设置zip文档的密码。

》》》ZipFile.read(name[, pwd])

获取zip文档内指定文件的二进制数据。zip文档内包括一个duoduo.txt的文本文件，使用read()方法读取其二进制数据，然后保存到D:/duoduo.txt。
zipFile = zipfile.ZipFile(os.path.join(os.getcwd(), 'duoduo.zip'))
data = zipFile.read('duoduo.txt')
# (lambda f, d: (f.write(d), f.close()))(open(r'd:/duoduo.txt', 'wb'), data) #一行语句就完成了写文件操作。仔细琢磨哦~_~
with open(r'd:/duoduo.txt','wb') as f:
 for d in data:
  f.write(d)
zipFile.close()

》》》ZipFile.write(filename[, arcname[, compress_type]])
将指定文件添加到zip文档中。filename为文件路径，arcname为添加到zip文档之后保存的名称, 参数compress_type表示压缩方法，
    它的值可以是zipfile. ZIP_STORED 或zipfile. ZIP_DEFLATED
zipFile = zipfile.ZipFile(r'D:/test.zip', 'w')
zipFile.write(r'D:/test.doc', '保存的名字', zipfile.ZIP_DEFLATED)
zipFile.close()

》》ZipFile.getinfo(name) 方法返回的是一个ZipInfo对象，表示zip文档中相应文件的信息。它支持如下属性：
ZipInfo.filename： 获取文件名称。
ZipInfo.date_time： 获取文件最后修改时间。返回一个包含6个元素的元组：(年, 月, 日, 时, 分, 秒)
ZipInfo.compress_type： 压缩类型。
ZipInfo.comment： 文档说明。
ZipInfo.extr： 扩展项数据。
ZipInfo.create_system： 获取创建该zip文档的系统。
ZipInfo.create_version： 获取 创建zip文档的PKZIP版本。
ZipInfo.extract_version： 获取 解压zip文档所需的PKZIP版本。
ZipInfo.reserved： 预留字段，当前实现总是返回0。
ZipInfo.flag_bits： zip标志位。
ZipInfo.volume： 文件头的卷标。
ZipInfo.internal_attr： 内部属性。
ZipInfo.external_attr： 外部属性。
ZipInfo.header_offset： 文件头偏移位。
ZipInfo.CRC： 未压缩文件的CRC-32。
ZipInfo.compress_size： 获取压缩后的大小。
ZipInfo.file_size： 获取未压缩的文件大小。

解压压缩包中的某个文件至指定路径
for f in os.listdir('E:\浏览器插件'):
    if f.endswith('zip'):
        zip = zipfile.ZipFile(f'E:\浏览器插件\{f}')
        for file in zip.namelist():
            if file.endswith('.crx') & not file.startswith('infi'):
                zip.extract(file, 'E:\浏览器插件\谷歌浏览器插件')
